
package services;

import java.util.Collection;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.util.Assert;

import repositories.QuestionRepository;
import domain.Poll;
import domain.Poller;
import domain.Question;

@Service
@Transactional
public class QuestionService {

	//Managed Repository =============================================================================

	@Autowired
	private QuestionRepository	questionRepository;

	//Services
	// ===============================================================================================

	@Autowired
	private AnswerService		answerService;

	@Autowired
	private PollerService		pollerService;


	//SCRUDs Methods
	//===============================================================================================

	public Question create(Poll poll) {
		Question result;

		Poller poller = pollerService.findByPrincipal();

		Assert.isTrue(poll.getPoller().getId() == poller.getId());

		result = new Question();
		result.setPoll(poll);

		return result;
	}

	//	public Question save(QuestionForm questionForm) {
	//		Assert.notNull(questionForm);
	//
	//		Poller poller = pollerService.findByPrincipal();
	//		
	//		Assert.isTrue(questionForm.getPoll().getPoller().getId() == poller.getId());
	//		
	//		Question result = questionRepository.save(question);
	//		
	//		for(String answer : questionForm.answers){
	//			Answer res = answerService.create(answer, result);
	//			answerService.save(res);
	//		}
	//
	//		return result;
	//	}

	public void delete(Question question) {
		Assert.notNull(question);

		Poller poller = pollerService.findByPrincipal();

		Assert.isTrue(question.getPoll().getPoller().getId() == poller.getId());

		questionRepository.delete(question);

	}

	public Question findOne(int questionId) {
		// TODO Auto-generated method stub
		Question question;

		question = questionRepository.findOne(questionId);

		return question;
	}

	public Collection<Question> findAll() {
		// TODO Auto-generated method stub
		Collection<Question> questions;

		questions = questionRepository.findAll();

		return questions;
	}

	//	public Question reconstruct(Question step, BindingResult binding) {
	//		Question result;
	//
	//		if (question.getId() == 0) {
	//			result = step;
	//			validator.validate(result, binding);
	//		} else {
	//			Question res = questionRepository.findOne(question.getId());
	//			result = question;
	//
	//			result.setPoll(res.getPoll());
	//
	//			validator.validate(result, binding);
	//		}
	//
	//		comprobarNumero(question, binding);
	//
	//		return result;
	//	}

}
